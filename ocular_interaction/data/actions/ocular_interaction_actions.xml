<?xml version="1.0" encoding="US-ASCII"?>

<!-- ETTS (voice, non verbal sounds, music...) 
     Slots and their values are:
      :sentence:
        If engine is non_verbal the possible values are: 
        "SINGING"|"CONFIRMATION"|"THINKING"|"WARNING"|"DIALOG"|"HELLO"|"ERROR"|"AMAZING"
        If engine is music_score a partiture is valid, example:
          BPM=85,A6,Ab2,C5,1/4-C3
        Fo other engines, sentence could be any text
    
      :engine:  'last_used', 'novoice', 'festival', 'google', 'loquendo', 'microsoft', 'nonverbal', 'music_score', 'pico', 'espeak'

      :emotion:
        "happy","tranquility","sad","nervous" 

      language: values: any google format language, example: "es","en", "pt"
      :priority: 
          QUEUE_SENTENCE | SHUTUP_IMMEDIATLY_AND_SAY_SENTENCE | SHUTUP_AND_SAY_SENTENCE | PAUSE | RESUME
      :volume: (1-100), 0 is VOLUME_LAST_USED
-->
<bml name="say_text">
  <roboml:args>
      <arg name="sentence" value="_NO_VALUE_" type="string"/>
      <arg name="engine"   value="google" type="string"/>      
      <arg name="emotion"  value="happy" type="string"/>
      <arg name="language" value="es" type="string"/>
      <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      <arg name="volume"   value="0" type="number"/>
  </roboml:args>
</bml>

<!-- To set a grammar on asr grammar-based recognizer
     slot: grammar: Grammar to set on asr grammar based engine 
                    (without absolute path and without the .gram extension)
-->
<bml name="set_grammar">
  <roboml:args>
      <arg name="grammar" value="_NO_VALUE_" type="string"/>
  </roboml:args>
</bml>


<!-- To add a new grammar on grammar-based recognizer
     (don't remove the currect grammars loaded on asr) 
     Grammar to add on asr grammar based engine (without absolute path awithout extension .gram)
-->
<bml name="add_grammar">
    <roboml:args>
        <arg name="grammar" value="_NO_VALUE_" type="string"/>
    </roboml:args>
</bml>


<!-- To perform a multimodal gesture (cummunicative expression)
     After the gesture argument, you can add any other arg
     that will be added to the parmas field of the
     GestureExpression.msg message 

      For instance: 
      <arg name="emotion" value="neutral" type="string"/>
      <arg name="user_name" value="Pedro" type="string"/>

      etc.
-->
<bml name="execute_gesture">
    <roboml:args>
        <arg name="gesture" value="_NO_VALUE_" type="string"/> 
    </roboml:args>
</bml>

<bml name="abort_action">
  <roboml:args>
  </roboml:args>
</bml>

<!-- Action to send KVPA Messages. 
     To use it, just put the fields you want in the recipe -->
<bml name="kvpa">
  <roboml:args>
  </roboml:args>
</bml>

<!-- Action to send to the ROS Loggers 
     Values of the slots:

     Slot     ---  Possible values
     -----------------------------
     logger   ---  'logdebug' OR 'loginfo' OR 'logwarn' OR'logerr' OR 'logfatal'
     message  ---   A string to be sent to the logger
-->
<bml name="log">
    <roboml:args>
        <arg name="logger"  value="_NO_VALUE_" type="string"/>
        <arg name="message" value="_NO_VALUE_" type="string"/>
    </roboml:args>
</bml>


<!-- Event Handler Action --> 
<bml name="send_event">
    <roboml:args>
        <arg name="hand"        value="_NO_VALUE_" type="string"/>
        <arg name="event"       value="_NO_VALUE_" type="string"/>
        <arg name="last_event"  value="_NO_VALUE_" type="string"/>
    </roboml:args>
</bml>


<!-- Object Name: Action to tell the name of an object -->
<bml name="object_name">
    <roboml:args>
        <arg name="object_name" value="_NO_VALUE_" type="string"/> 
    </roboml:args>
</bml>